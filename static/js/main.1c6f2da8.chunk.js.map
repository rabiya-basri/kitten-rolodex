{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Searchbox","placeholder","handelchange","type","onChange","App","handelChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","catch","error","console","log","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAKN,EAAMI,QAAQG,YCHVC,G,MAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SAEED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCLrBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBAAOZ,UAAU,aACba,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8BHG,G,wDA/Bb,aAAe,IAAD,8BACZ,gBAYFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,uDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAASmB,OACtCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,6B,oBAKhC,WAAU,IAAD,EAC2BC,KAAKV,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZc,EAAmBzB,EAAS0B,QAAO,SAAA/B,GAAO,OAC9CA,EAAQE,KAAK8B,cAAcC,SAASjB,EAAYgB,kBAEhD,OACE,sBAAKnC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAcoB,KAAKhB,eAC3D,cAAC,EAAD,CAAUR,SAAWyB,W,GA1BbI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1c6f2da8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`} />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{ props.monster.email}</p>\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport { Card } from '../card/card.component'\r\nimport './card-list.style.css'\r\n\r\nexport const CardList = (props) => {\r\n    return <div className='card-list'>\r\n      {\r\n             props.monsters.map(monster => (\r\n               <Card key={monster.id} monster={ monster}/>\r\n            ))}\r\n    </div>\r\n}","import React from 'react'\r\nimport './search-box.style.css'\r\n\r\nexport const Searchbox = ({placeholder,handelchange}) => (\r\n    <input className=\"search-box\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handelchange} />\r\n)","import React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component';\nimport { Searchbox } from './components/search-box/searchbox.component';\nimport './App.css';\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users?limit=20')\n      .then(response => response.json())\n      .then(users => this.setState({monsters:users}))\n      .catch(error => console.log('something went wrong'))\n  }\n  handelChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()\n      ))\n      return (\n        <div className=\"App\">\n          <h1>Kittens rolodex</h1>\n          <Searchbox placeholder=\"Search Kittens\" handelchange={this.handelChange}/>\n          <CardList monsters={ filteredMonsters}/>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}